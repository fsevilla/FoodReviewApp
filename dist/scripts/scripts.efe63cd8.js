"use strict";angular.module("myFoodApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","lbServices","ui.bootstrap","toastr"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/saucers/:id",{templateUrl:"views/saucers.html",controller:"SaucersCtrl"}).when("/saucers/:id/comments/:saucerId",{templateUrl:"views/comments.html",controller:"CommentsCtrl"}).otherwise({redirectTo:"/"})}]),"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="lbServices"),function(a,b,c){function d(a){var b=a.match(/^(?:https?:)?\/\/([^\/]+)/);return b?b[1]:null}var e="https://stark-river-41252.herokuapp.com/api",f="authorization",g=d(e)||location.host,h=b.module("lbServices",["ngResource"]);h.factory("User",["LoopBackResource","LoopBackAuth","$injector",function(a,b,c){var d=a(e+"/Users/:id",{id:"@id"},{prototype$__findById__accessTokens:{params:{fk:"@fk"},url:e+"/Users/:id/accessTokens/:fk",method:"GET"},prototype$__destroyById__accessTokens:{params:{fk:"@fk"},url:e+"/Users/:id/accessTokens/:fk",method:"DELETE"},prototype$__updateById__accessTokens:{params:{fk:"@fk"},url:e+"/Users/:id/accessTokens/:fk",method:"PUT"},prototype$__get__accessTokens:{isArray:!0,url:e+"/Users/:id/accessTokens",method:"GET"},prototype$__create__accessTokens:{url:e+"/Users/:id/accessTokens",method:"POST"},prototype$__delete__accessTokens:{url:e+"/Users/:id/accessTokens",method:"DELETE"},prototype$__count__accessTokens:{url:e+"/Users/:id/accessTokens/count",method:"GET"},create:{url:e+"/Users",method:"POST"},createMany:{isArray:!0,url:e+"/Users",method:"POST"},upsert:{url:e+"/Users",method:"PATCH"},replaceOrCreate:{url:e+"/Users/replaceOrCreate",method:"POST"},exists:{url:e+"/Users/:id/exists",method:"GET"},findById:{url:e+"/Users/:id",method:"GET"},replaceById:{url:e+"/Users/:id/replace",method:"POST"},find:{isArray:!0,url:e+"/Users",method:"GET"},findOne:{url:e+"/Users/findOne",method:"GET"},updateAll:{url:e+"/Users/update",method:"POST"},deleteById:{url:e+"/Users/:id",method:"DELETE"},count:{url:e+"/Users/count",method:"GET"},prototype$updateAttributes:{url:e+"/Users/:id",method:"PATCH"},createChangeStream:{url:e+"/Users/change-stream",method:"POST"},login:{params:{include:"user"},interceptor:{response:function(a){var c=a.data;return b.setUser(c.id,c.userId,c.user),b.rememberMe=a.config.params.rememberMe!==!1,b.save(),a.resource}},url:e+"/Users/login",method:"POST"},logout:{interceptor:{response:function(a){return b.clearUser(),b.clearStorage(),a.resource},responseError:function(a){return b.clearUser(),b.clearStorage(),a.resource}},url:e+"/Users/logout",method:"POST"},confirm:{url:e+"/Users/confirm",method:"GET"},resetPassword:{url:e+"/Users/reset",method:"POST"},"::get::AccessToken::user":{url:e+"/AccessTokens/:id/user",method:"GET"},getCurrent:{url:e+"/Users/:id",method:"GET",params:{id:function(){var a=b.currentUserId;return null==a&&(a="__anonymous__"),a}},interceptor:{response:function(a){return b.currentUserData=a.data,a.resource}},__isGetCurrentUser__:!0}});return d.patchOrCreate=d.upsert,d.updateOrCreate=d.upsert,d.update=d.updateAll,d.destroyById=d.deleteById,d.removeById=d.deleteById,d.patchAttributes=d.prototype$updateAttributes,d.getCachedCurrent=function(){var a=b.currentUserData;return a?new d(a):null},d.isAuthenticated=function(){return null!=this.getCurrentId()},d.getCurrentId=function(){return b.currentUserId},d.modelName="User",d.accessTokens=function(){var a=c.get("AccessToken"),b=a["::get::User::accessTokens"];return b.apply(d,arguments)},d.accessTokens.count=function(){var a=c.get("AccessToken"),b=a["::count::User::accessTokens"];return b.apply(d,arguments)},d.accessTokens.create=function(){var a=c.get("AccessToken"),b=a["::create::User::accessTokens"];return b.apply(d,arguments)},d.accessTokens.createMany=function(){var a=c.get("AccessToken"),b=a["::createMany::User::accessTokens"];return b.apply(d,arguments)},d.accessTokens.destroyAll=function(){var a=c.get("AccessToken"),b=a["::delete::User::accessTokens"];return b.apply(d,arguments)},d.accessTokens.destroyById=function(){var a=c.get("AccessToken"),b=a["::destroyById::User::accessTokens"];return b.apply(d,arguments)},d.accessTokens.findById=function(){var a=c.get("AccessToken"),b=a["::findById::User::accessTokens"];return b.apply(d,arguments)},d.accessTokens.updateById=function(){var a=c.get("AccessToken"),b=a["::updateById::User::accessTokens"];return b.apply(d,arguments)},d}]),h.factory("AccessToken",["LoopBackResource","LoopBackAuth","$injector",function(a,b,c){var d=a(e+"/AccessTokens/:id",{id:"@id"},{prototype$__get__user:{url:e+"/AccessTokens/:id/user",method:"GET"},create:{url:e+"/AccessTokens",method:"POST"},createMany:{isArray:!0,url:e+"/AccessTokens",method:"POST"},upsert:{url:e+"/AccessTokens",method:"PATCH"},replaceOrCreate:{url:e+"/AccessTokens/replaceOrCreate",method:"POST"},exists:{url:e+"/AccessTokens/:id/exists",method:"GET"},findById:{url:e+"/AccessTokens/:id",method:"GET"},replaceById:{url:e+"/AccessTokens/:id/replace",method:"POST"},find:{isArray:!0,url:e+"/AccessTokens",method:"GET"},findOne:{url:e+"/AccessTokens/findOne",method:"GET"},updateAll:{url:e+"/AccessTokens/update",method:"POST"},deleteById:{url:e+"/AccessTokens/:id",method:"DELETE"},count:{url:e+"/AccessTokens/count",method:"GET"},prototype$updateAttributes:{url:e+"/AccessTokens/:id",method:"PATCH"},createChangeStream:{url:e+"/AccessTokens/change-stream",method:"POST"},"::findById::User::accessTokens":{params:{fk:"@fk"},url:e+"/Users/:id/accessTokens/:fk",method:"GET"},"::destroyById::User::accessTokens":{params:{fk:"@fk"},url:e+"/Users/:id/accessTokens/:fk",method:"DELETE"},"::updateById::User::accessTokens":{params:{fk:"@fk"},url:e+"/Users/:id/accessTokens/:fk",method:"PUT"},"::get::User::accessTokens":{isArray:!0,url:e+"/Users/:id/accessTokens",method:"GET"},"::create::User::accessTokens":{url:e+"/Users/:id/accessTokens",method:"POST"},"::createMany::User::accessTokens":{isArray:!0,url:e+"/Users/:id/accessTokens",method:"POST"},"::delete::User::accessTokens":{url:e+"/Users/:id/accessTokens",method:"DELETE"},"::count::User::accessTokens":{url:e+"/Users/:id/accessTokens/count",method:"GET"}});return d.patchOrCreate=d.upsert,d.updateOrCreate=d.upsert,d.update=d.updateAll,d.destroyById=d.deleteById,d.removeById=d.deleteById,d.patchAttributes=d.prototype$updateAttributes,d.modelName="AccessToken",d.user=function(){var a=c.get("User"),b=a["::get::AccessToken::user"];return b.apply(d,arguments)},d}]),h.factory("Restaurant",["LoopBackResource","LoopBackAuth","$injector",function(a,b,c){var d=a(e+"/restaurants/:id",{id:"@id"},{prototype$__findById__saucers:{params:{fk:"@fk"},url:e+"/restaurants/:id/saucers/:fk",method:"GET"},prototype$__destroyById__saucers:{params:{fk:"@fk"},url:e+"/restaurants/:id/saucers/:fk",method:"DELETE"},prototype$__updateById__saucers:{params:{fk:"@fk"},url:e+"/restaurants/:id/saucers/:fk",method:"PUT"},prototype$__get__saucers:{isArray:!0,url:e+"/restaurants/:id/saucers",method:"GET"},prototype$__create__saucers:{url:e+"/restaurants/:id/saucers",method:"POST"},prototype$__delete__saucers:{url:e+"/restaurants/:id/saucers",method:"DELETE"},prototype$__count__saucers:{url:e+"/restaurants/:id/saucers/count",method:"GET"},create:{url:e+"/restaurants",method:"POST"},createMany:{isArray:!0,url:e+"/restaurants",method:"POST"},upsert:{url:e+"/restaurants",method:"PATCH"},replaceOrCreate:{url:e+"/restaurants/replaceOrCreate",method:"POST"},exists:{url:e+"/restaurants/:id/exists",method:"GET"},findById:{url:e+"/restaurants/:id",method:"GET"},replaceById:{url:e+"/restaurants/:id/replace",method:"POST"},find:{isArray:!0,url:e+"/restaurants",method:"GET"},findOne:{url:e+"/restaurants/findOne",method:"GET"},updateAll:{url:e+"/restaurants/update",method:"POST"},deleteById:{url:e+"/restaurants/:id",method:"DELETE"},count:{url:e+"/restaurants/count",method:"GET"},prototype$updateAttributes:{url:e+"/restaurants/:id",method:"PATCH"},createChangeStream:{url:e+"/restaurants/change-stream",method:"POST"}});return d.patchOrCreate=d.upsert,d.updateOrCreate=d.upsert,d.update=d.updateAll,d.destroyById=d.deleteById,d.removeById=d.deleteById,d.patchAttributes=d.prototype$updateAttributes,d.modelName="Restaurant",d.saucers=function(){var a=c.get("Saucer"),b=a["::get::Restaurant::saucers"];return b.apply(d,arguments)},d.saucers.count=function(){var a=c.get("Saucer"),b=a["::count::Restaurant::saucers"];return b.apply(d,arguments)},d.saucers.create=function(){var a=c.get("Saucer"),b=a["::create::Restaurant::saucers"];return b.apply(d,arguments)},d.saucers.createMany=function(){var a=c.get("Saucer"),b=a["::createMany::Restaurant::saucers"];return b.apply(d,arguments)},d.saucers.destroyAll=function(){var a=c.get("Saucer"),b=a["::delete::Restaurant::saucers"];return b.apply(d,arguments)},d.saucers.destroyById=function(){var a=c.get("Saucer"),b=a["::destroyById::Restaurant::saucers"];return b.apply(d,arguments)},d.saucers.findById=function(){var a=c.get("Saucer"),b=a["::findById::Restaurant::saucers"];return b.apply(d,arguments)},d.saucers.updateById=function(){var a=c.get("Saucer"),b=a["::updateById::Restaurant::saucers"];return b.apply(d,arguments)},d}]),h.factory("Saucer",["LoopBackResource","LoopBackAuth","$injector",function(a,b,c){var d=a(e+"/saucers/:id",{id:"@id"},{prototype$__findById__comments:{params:{fk:"@fk"},url:e+"/saucers/:id/comments/:fk",method:"GET"},prototype$__destroyById__comments:{params:{fk:"@fk"},url:e+"/saucers/:id/comments/:fk",method:"DELETE"},prototype$__updateById__comments:{params:{fk:"@fk"},url:e+"/saucers/:id/comments/:fk",method:"PUT"},prototype$__get__comments:{isArray:!0,url:e+"/saucers/:id/comments",method:"GET"},prototype$__create__comments:{url:e+"/saucers/:id/comments",method:"POST"},prototype$__delete__comments:{url:e+"/saucers/:id/comments",method:"DELETE"},prototype$__count__comments:{url:e+"/saucers/:id/comments/count",method:"GET"},create:{url:e+"/saucers",method:"POST"},createMany:{isArray:!0,url:e+"/saucers",method:"POST"},upsert:{url:e+"/saucers",method:"PATCH"},replaceOrCreate:{url:e+"/saucers/replaceOrCreate",method:"POST"},exists:{url:e+"/saucers/:id/exists",method:"GET"},findById:{url:e+"/saucers/:id",method:"GET"},replaceById:{url:e+"/saucers/:id/replace",method:"POST"},find:{isArray:!0,url:e+"/saucers",method:"GET"},findOne:{url:e+"/saucers/findOne",method:"GET"},updateAll:{url:e+"/saucers/update",method:"POST"},deleteById:{url:e+"/saucers/:id",method:"DELETE"},count:{url:e+"/saucers/count",method:"GET"},prototype$updateAttributes:{url:e+"/saucers/:id",method:"PATCH"},createChangeStream:{url:e+"/saucers/change-stream",method:"POST"},"::findById::Restaurant::saucers":{params:{fk:"@fk"},url:e+"/restaurants/:id/saucers/:fk",method:"GET"},"::destroyById::Restaurant::saucers":{params:{fk:"@fk"},url:e+"/restaurants/:id/saucers/:fk",method:"DELETE"},"::updateById::Restaurant::saucers":{params:{fk:"@fk"},url:e+"/restaurants/:id/saucers/:fk",method:"PUT"},"::get::Restaurant::saucers":{isArray:!0,url:e+"/restaurants/:id/saucers",method:"GET"},"::create::Restaurant::saucers":{url:e+"/restaurants/:id/saucers",method:"POST"},"::createMany::Restaurant::saucers":{isArray:!0,url:e+"/restaurants/:id/saucers",method:"POST"},"::delete::Restaurant::saucers":{url:e+"/restaurants/:id/saucers",method:"DELETE"},"::count::Restaurant::saucers":{url:e+"/restaurants/:id/saucers/count",method:"GET"}});return d.patchOrCreate=d.upsert,d.updateOrCreate=d.upsert,d.update=d.updateAll,d.destroyById=d.deleteById,d.removeById=d.deleteById,d.patchAttributes=d.prototype$updateAttributes,d.modelName="Saucer",d.comments=function(){var a=c.get("Comment"),b=a["::get::Saucer::comments"];return b.apply(d,arguments)},d.comments.count=function(){var a=c.get("Comment"),b=a["::count::Saucer::comments"];return b.apply(d,arguments)},d.comments.create=function(){var a=c.get("Comment"),b=a["::create::Saucer::comments"];return b.apply(d,arguments)},d.comments.createMany=function(){var a=c.get("Comment"),b=a["::createMany::Saucer::comments"];return b.apply(d,arguments)},d.comments.destroyAll=function(){var a=c.get("Comment"),b=a["::delete::Saucer::comments"];return b.apply(d,arguments)},d.comments.destroyById=function(){var a=c.get("Comment"),b=a["::destroyById::Saucer::comments"];return b.apply(d,arguments)},d.comments.findById=function(){var a=c.get("Comment"),b=a["::findById::Saucer::comments"];return b.apply(d,arguments)},d.comments.updateById=function(){var a=c.get("Comment"),b=a["::updateById::Saucer::comments"];return b.apply(d,arguments)},d}]),h.factory("Comment",["LoopBackResource","LoopBackAuth","$injector",function(a,b,c){var d=a(e+"/comments/:id",{id:"@id"},{create:{url:e+"/comments",method:"POST"},createMany:{isArray:!0,url:e+"/comments",method:"POST"},upsert:{url:e+"/comments",method:"PATCH"},replaceOrCreate:{url:e+"/comments/replaceOrCreate",method:"POST"},exists:{url:e+"/comments/:id/exists",method:"GET"},findById:{url:e+"/comments/:id",method:"GET"},replaceById:{url:e+"/comments/:id/replace",method:"POST"},find:{isArray:!0,url:e+"/comments",method:"GET"},findOne:{url:e+"/comments/findOne",method:"GET"},updateAll:{url:e+"/comments/update",method:"POST"},deleteById:{url:e+"/comments/:id",method:"DELETE"},count:{url:e+"/comments/count",method:"GET"},prototype$updateAttributes:{url:e+"/comments/:id",method:"PATCH"},createChangeStream:{url:e+"/comments/change-stream",method:"POST"},"::findById::Saucer::comments":{params:{fk:"@fk"},url:e+"/saucers/:id/comments/:fk",method:"GET"},"::destroyById::Saucer::comments":{params:{fk:"@fk"},url:e+"/saucers/:id/comments/:fk",method:"DELETE"},"::updateById::Saucer::comments":{params:{fk:"@fk"},url:e+"/saucers/:id/comments/:fk",method:"PUT"},"::get::Saucer::comments":{isArray:!0,url:e+"/saucers/:id/comments",method:"GET"},"::create::Saucer::comments":{url:e+"/saucers/:id/comments",method:"POST"},"::createMany::Saucer::comments":{isArray:!0,url:e+"/saucers/:id/comments",method:"POST"},"::delete::Saucer::comments":{url:e+"/saucers/:id/comments",method:"DELETE"},"::count::Saucer::comments":{url:e+"/saucers/:id/comments/count",method:"GET"}});return d.patchOrCreate=d.upsert,d.updateOrCreate=d.upsert,d.update=d.updateAll,d.destroyById=d.deleteById,d.removeById=d.deleteById,d.patchAttributes=d.prototype$updateAttributes,d.modelName="Comment",d}]),h.factory("LoopBackAuth",function(){function a(){var a=this;d.forEach(function(b){a[b]=c(b)}),this.currentUserData=null}function b(a,b,c){try{var d=e+b;null==c&&(c=""),a[d]=c}catch(f){console.log("Cannot access local/session storage:",f)}}function c(a){var b=e+a;return localStorage[b]||sessionStorage[b]||null}var d=["accessTokenId","currentUserId","rememberMe"],e="$LoopBack$";return a.prototype.save=function(){var a=this,c=this.rememberMe?localStorage:sessionStorage;d.forEach(function(d){b(c,d,a[d])})},a.prototype.setUser=function(a,b,c){this.accessTokenId=a,this.currentUserId=b,this.currentUserData=c},a.prototype.clearUser=function(){this.accessTokenId=null,this.currentUserId=null,this.currentUserData=null},a.prototype.clearStorage=function(){d.forEach(function(a){b(sessionStorage,a,null),b(localStorage,a,null)})},new a}).config(["$httpProvider",function(a){a.interceptors.push("LoopBackAuthRequestInterceptor")}]).factory("LoopBackAuthRequestInterceptor",["$q","LoopBackAuth",function(a,b){return{request:function(e){var h=d(e.url);if(h&&h!==g)return e;if(b.accessTokenId)e.headers[f]=b.accessTokenId;else if(e.__isGetCurrentUser__){var i={body:{error:{status:401}},status:401,config:e,headers:function(){return c}};return a.reject(i)}return e||a.when(e)}}}]).provider("LoopBackResource",function(){this.setAuthHeader=function(a){f=a},this.getAuthHeader=function(){return f},this.setUrlBase=function(a){e=a,g=d(e)||location.host},this.getUrlBase=function(){return e},this.$get=["$resource",function(a){var b=function(b,c,d){var e=a(b,c,d);return e.prototype.$save=function(a,b){var c=e.upsert.call(this,{},this,a,b);return c.$promise||c},e};return b.getUrlBase=function(){return e},b.getAuthHeader=function(){return f},b}]})}(window,window.angular),angular.module("myFoodApp").controller("MainCtrl",["$scope","Restaurant",function(a,b){a.restaurants=b.find()}]),angular.module("myFoodApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("myFoodApp").controller("SaucersCtrl",["$scope","$routeParams","Restaurant","Saucer",function(a,b,c,d){var e=b.id;a.restaurant=c.findOne({filter:{where:{id:e}}}),d.find({filter:{where:{restaurantId:e}}},function(b){a.saucers=b})}]),angular.module("myFoodApp").controller("CommentsCtrl",["$scope","$routeParams","$uibModal","Restaurant","Saucer","Comment","toastr",function(a,b,c,d,e,f,g){var h=b.id,i=b.saucerId;a.restaurant=d.findOne({filter:{where:{id:h}}}),a.saucer=e.findOne({filter:{where:{id:i}}}),a.getComments=function(){f.find({filter:{where:{saucerId:i}}},function(b){a.comments=b})},a.openCreateCommentModal=function(){c.open({animation:!0,templateUrl:"views/createCommentModal.html",controller:"CreateCommentCtrl",resolve:{saucer:a.saucer}})},a.$on("commentSaved",function(){a.getComments(),g.success("Your comment was saved successfully!")}),a.getComments()}]),angular.module("myFoodApp").controller("CreateCommentCtrl",["$scope","$rootScope","$uibModalInstance","saucer","Comment",function(a,b,c,d,e){a.data={saucerId:d.id},a.saveComment=function(){console.log("Data to be saved: ",a.data),e.create(a.data,function(){c.dismiss("saved"),b.$broadcast("commentSaved",a.data)})}}]),angular.module("myFoodApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/comments.html",'<h1>Comments for {{saucer.name}}</h1> <p>Go back to <a ng-href="#/saucers/{{restaurant.id}}">{{restaurant.name}}</a></p> <div class="row"> <div class="col-md-12"> <a ng-click="openCreateCommentModal()" class="btn btn-primary pull-right"> <span class="glyphicon glyphicon-plus"></span> Add comment </a> </div> </div> <div class="row"> <div class="col-md-12" ng-repeat="comment in comments"> <div class="card wide"> <p><strong>Author: </strong> Fulanito</p> <p>{{comment.comment}}</p> </div> </div> </div>'),a.put("views/createCommentModal.html",'<div class="row"> <div class="col-md-10 col-md-offset-1"> <h3>Add a comment</h3> </div> </div> <form ng-submit="saveComment()"> <div class="row"> <div class="form-group col-md-10 col-md-offset-1"> <input class="form-control" type="text" ng-model="data.createdBy" placeholder="Your Name"> </div> <div class="form-group col-md-10 col-md-offset-1"> <input class="form-control" type="text" ng-model="data.comment" placeholder="Your Comment"> </div> <div class="form-group col-md-10 col-md-offset-1"> <button class="btn btn-primary pull-right">Send</button> </div> </div> </form>'),a.put("views/main.html",'<h1>Restaurants</h1> <div class="row"> <div class="col-md-4" ng-repeat="restaurant in restaurants"> <div class="card"> <h4>{{restaurant.name}}</h4> <p>{{restaurant.location.address}}</p> <a ng-href="#/saucers/{{restaurant.id}}">View</a> </div> </div> </div>'),a.put("views/saucers.html",'<h1>Saucers of {{restaurant.name}}</h1> <div class="row"> <div class="col-md-12" ng-if="saucers.length == 0"> <h3>No saucers found</h3> </div> <div class="col-md-4" ng-repeat="saucer in saucers"> <div class="card"> <h4>{{saucer.name}}</h4> <a ng-href="#/saucers/{{restaurant.id}}/comments/{{saucer.id}}">Comments</a> <div class="rate"> <span ng-class="{rated: $index < saucer.calification}" ng-repeat="i in [1, 2, 3, 4, 5]"></span> </div> </div> </div> </div>')}]);